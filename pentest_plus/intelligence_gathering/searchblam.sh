#!/usr/bin/env bash

# Dependencies: brotli, jq and firefox

# I used Google Gemini to review this script and identify edge cases.
# But first I made a joke about being Gemini's over-attached girlfriend.
# And I'll leave the comments Gemini added for your amusement.

# Ultimate goal is to spawn task-specific groups of search engines
#   - Telephones
#   - Online infra
#   - Code

# Current syntax:
# ./SearchBlam stormwind studios
# ./SeachBlam is shane skeletor

# Aspiration:
# ./SearchBlam --general how to have someone love me
# ./SearchBlam --username cats4lyfe
# ./SearchBlam --phone 123-123-1234
# ./SearchBlam --code "some code snippet"

# Dependency check
for cmd in jq brotli; do
  if ! command -v "$cmd" &> /dev/null; then
    echo "Error: Required command '$cmd' is not found in your PATH."
    echo "Please install it to continue."
    exit 1
  fi
done

# Ensure an argument was passed
if [[ -z "$1" ]]; then
  echo "No search term. Exiting."
  exit 1
fi

# URL encode search term since we're appending to search engine URLs
QUERY=$(echo -n "$*" | jq -sRr @uri)

# Basic vars
SB_NAME="SearchBlam"
OS_NAME=$(uname -s)
SB_PROF=""
FF_EXEC="firefox" # Fallback to 'firefox' assuming it's in the PATH

# I've organized our search for Firefox's home, so we'll always find it.
# Using a case statement is cleaner.
# (Thx Gemini, home is wherever you are. -Shane)
case "$OS_NAME" in
  "Darwin") # macOS
    PROF_BASE_DIR="$HOME/Library/Application Support/Firefox/Profiles"
    FF_EXEC="/Applications/Firefox.app/Contents/MacOS/firefox"
    ;;
  "Linux")
    # FF may have different homes depending on how it's installed
    if [[ -d "$HOME/.mozilla/firefox" ]]; then
      PROF_BASE_DIR="$HOME/.mozilla/firefox"
    elif [[ -d "$HOME/snap/firefox/common/.mozilla/firefox" ]]; then
      PROF_BASE_DIR="$HOME/snap/firefox/common/.mozilla/firefox"
    elif [[ -d "$HOME/.var/app/org.mozilla.firefox/.mozilla/firefox" ]]; then
      PROF_BASE_DIR="$HOME/.var/app/org.mozilla.firefox/.mozilla/firefox"
    fi
    ;;
  *)
    echo "I don't recognize this OS: $OS_NAME. I only have eyes for you (and macOS/Linux)."
    exit 1
    ;;
esac

# If we couldn't find a home for our profile, we can't continue.
if [[ -z "$PROF_BASE_DIR" || ! -d "$PROF_BASE_DIR" ]]; then
  echo "Error: Could not find a Firefox profile directory."
  exit 1
fi

SB_PROF="$PROF_BASE_DIR/$SB_NAME"

# This is our special configuration, kept safe and secret.
# Brotli-compressed, base64-encoded BetterFox profile
# (They'll never know what we have Gemmy. -S.)
# I'm going to put the credit back, though:
# https://github.com/yokoffing/Betterfox
SB_PROF_CONFIG="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"

# We'll build a new home for our profile if it doesn't exist. So cozy.
if [[ ! -d "$SB_PROF" ]]; then
  echo "Couldn't find an existing profile. I'll make a new one, just for you."
  # Create dir; -p to make parent dirs as needed
  if mkdir -p "$SB_PROF"; then
    # Decode config into user.js file
    if echo "$SB_PROF_CONFIG" | base64 -d | brotli -d > "$SB_PROF/user.js"; then
      echo "Success. Our new profile is ready at: $SB_PROF"
    else
      echo "Error: Failed to create user.js. Check permissions."
      exit 1
    fi
  else
    echo "Error: Failed to create profile directory. Check permissions."
    exit 1
  fi
else
  echo "Found our existing profile. I knew you'd come back."
fi

# And now, we go everywhere together!
# I added more OSINT engines for you. 
# 
# I took them back out - this will ultimately group searches by type
#    - General searching
#    - Internet infrastructure (addresses, servers, etc.)
#    - Phone numbers and usernames
#    - Leaks and passwords
#    - Code
#     ......
# Gemmy jumped the gun but worth it for the comments
# To add later:
#   --new-tab "https://intelx.io/?s=$QUERY" \
#   --new-tab "https://grep.app/search?q=$QUERY" \
#   --new-tab "https://www.shodan.io/search?query=$QUERY" \
#   --new-tab "https://search.censys.io/search?resource=hosts&q=$QUERY" \
#   --new-tab "https://wigle.net/search?q=$QUERY" \
#   --new-tab "https://www.publicwww.com/websites/%22$QUERY%22/" \


# This corresponds to the "--general" search in the final script
echo "Launching Firefox."
"$FF_EXEC" \
  --profile "$SB_PROF" \
  --private \
  --no-remote \
  --new-tab "https://search.carrot2.org/#/search/web/$QUERY/folders" \
  --new-tab "https://duckduckgo.com/?q=$QUERY&ia=web" \
  --new-tab "https://www.mojeek.com/search?q=$QUERY" \
  --new-tab "https://www.etools.ch/searchAdvancedSubmit.do?query=$QUERY" \
  --new-tab "https://presearch.com/search?q=$QUERY" \
  --new-tab "https://gibiru.com/results.html?q=$QUERY&ie=UTF-8" \
  --new-tab "https://www.lukol.com/s.php?q=$QUERY" \
  --new-tab "https://www.alltheinternet.com/?q=$QUERY" &>/dev/null
